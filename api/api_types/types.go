// Package api_types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api_types

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for AiChatMessageRoleEnum.
const (
	Assistant AiChatMessageRoleEnum = "Assistant"
	Data      AiChatMessageRoleEnum = "Data"
	System    AiChatMessageRoleEnum = "System"
	User      AiChatMessageRoleEnum = "User"
)

// Defines values for AiChatMessageVoteEnum.
const (
	Downvote AiChatMessageVoteEnum = "Downvote"
	Upvote   AiChatMessageVoteEnum = "Upvote"
)

// Defines values for AiChatStatusEnum.
const (
	AiChatStatusEnumActive   AiChatStatusEnum = "Active"
	AiChatStatusEnumInactive AiChatStatusEnum = "Inactive"
)

// Defines values for AiChatVisibilityEnum.
const (
	Private AiChatVisibilityEnum = "Private"
	Public  AiChatVisibilityEnum = "Public"
)

// Defines values for AiModelEnum.
const (
	Claude35    AiModelEnum = "Claude3.5"
	GPT4Mini    AiModelEnum = "GPT4Mini"
	Gemini15Pro AiModelEnum = "Gemini1.5Pro"
	Gpt35Turbo  AiModelEnum = "Gpt3.5Turbo"
	Gpt4o       AiModelEnum = "Gpt4o"
	Mistral     AiModelEnum = "Mistral"
)

// Defines values for CampaignStatusEnum.
const (
	Cancelled CampaignStatusEnum = "Cancelled"
	Draft     CampaignStatusEnum = "Draft"
	Finished  CampaignStatusEnum = "Finished"
	Paused    CampaignStatusEnum = "Paused"
	Running   CampaignStatusEnum = "Running"
	Scheduled CampaignStatusEnum = "Scheduled"
)

// Defines values for ContactStatusEnum.
const (
	ContactStatusEnumActive   ContactStatusEnum = "Active"
	ContactStatusEnumBlocked  ContactStatusEnum = "Blocked"
	ContactStatusEnumInactive ContactStatusEnum = "Inactive"
)

// Defines values for ConversationInitiatedByEnum.
const (
	Campaign ConversationInitiatedByEnum = "Campaign"
	Contact  ConversationInitiatedByEnum = "Contact"
)

// Defines values for ConversationStatusEnum.
const (
	ConversationStatusEnumActive  ConversationStatusEnum = "Active"
	ConversationStatusEnumClosed  ConversationStatusEnum = "Closed"
	ConversationStatusEnumDeleted ConversationStatusEnum = "Deleted"
)

// Defines values for IntegrationStatusEnum.
const (
	IntegrationStatusEnumActive   IntegrationStatusEnum = "Active"
	IntegrationStatusEnumInactive IntegrationStatusEnum = "Inactive"
)

// Defines values for InviteStatusEnum.
const (
	Pending  InviteStatusEnum = "Pending"
	Redeemed InviteStatusEnum = "Redeemed"
)

// Defines values for MessageDirectionEnum.
const (
	InBound  MessageDirectionEnum = "InBound"
	OutBound MessageDirectionEnum = "OutBound"
)

// Defines values for MessageStatusEnum.
const (
	MessageStatusEnumDelivered   MessageStatusEnum = "Delivered"
	MessageStatusEnumFailed      MessageStatusEnum = "Failed"
	MessageStatusEnumRead        MessageStatusEnum = "Read"
	MessageStatusEnumSent        MessageStatusEnum = "Sent"
	MessageStatusEnumUnDelivered MessageStatusEnum = "UnDelivered"
	MessageStatusEnumUnread      MessageStatusEnum = "Unread"
)

// Defines values for MessageTemplateCategory.
const (
	AUTHENTICATION MessageTemplateCategory = "AUTHENTICATION"
	MARKETING      MessageTemplateCategory = "MARKETING"
	UTILITY        MessageTemplateCategory = "UTILITY"
)

// Defines values for MessageTemplateComponentFormat.
const (
	DOCUMENT MessageTemplateComponentFormat = "DOCUMENT"
	IMAGE    MessageTemplateComponentFormat = "IMAGE"
	LOCATION MessageTemplateComponentFormat = "LOCATION"
	TEXT     MessageTemplateComponentFormat = "TEXT"
	VIDEO    MessageTemplateComponentFormat = "VIDEO"
)

// Defines values for MessageTemplateComponentType.
const (
	BODY             MessageTemplateComponentType = "BODY"
	BUTTONS          MessageTemplateComponentType = "BUTTONS"
	CAROUSEL         MessageTemplateComponentType = "CAROUSEL"
	FOOTER           MessageTemplateComponentType = "FOOTER"
	GREETING         MessageTemplateComponentType = "GREETING"
	HEADER           MessageTemplateComponentType = "HEADER"
	LIMITEDTIMEOFFER MessageTemplateComponentType = "LIMITED_TIME_OFFER"
)

// Defines values for MessageTemplateStatus.
const (
	APPROVED MessageTemplateStatus = "APPROVED"
	PENDING  MessageTemplateStatus = "PENDING"
	REJECTED MessageTemplateStatus = "REJECTED"
)

// Defines values for MessageTypeEnum.
const (
	Address  MessageTypeEnum = "Address"
	Audio    MessageTypeEnum = "Audio"
	Contacts MessageTypeEnum = "Contacts"
	Document MessageTypeEnum = "Document"
	Image    MessageTypeEnum = "Image"
	Location MessageTypeEnum = "Location"
	Reaction MessageTypeEnum = "Reaction"
	Sticker  MessageTypeEnum = "Sticker"
	Text     MessageTypeEnum = "Text"
	Video    MessageTypeEnum = "Video"
)

// Defines values for OrderEnum.
const (
	Asc  OrderEnum = "asc"
	Desc OrderEnum = "desc"
)

// Defines values for RolePermissionEnum.
const (
	AssignConversation        RolePermissionEnum = "Assign:Conversation"
	BulkImportContacts        RolePermissionEnum = "BulkImport:Contacts"
	CreateCampaign            RolePermissionEnum = "Create:Campaign"
	CreateContact             RolePermissionEnum = "Create:Contact"
	CreateList                RolePermissionEnum = "Create:List"
	CreateOrganizationMember  RolePermissionEnum = "Create:OrganizationMember"
	CreateOrganizationRole    RolePermissionEnum = "Create:OrganizationRole"
	CreateTag                 RolePermissionEnum = "Create:Tag"
	DeleteCampaign            RolePermissionEnum = "Delete:Campaign"
	DeleteContact             RolePermissionEnum = "Delete:Contact"
	DeleteConversation        RolePermissionEnum = "Delete:Conversation"
	DeleteList                RolePermissionEnum = "Delete:List"
	DeleteOrganizationMember  RolePermissionEnum = "Delete:OrganizationMember"
	DeleteOrganizationRole    RolePermissionEnum = "Delete:OrganizationRole"
	DeleteTag                 RolePermissionEnum = "Delete:Tag"
	GetApiKey                 RolePermissionEnum = "Get:ApiKey"
	GetAppSettings            RolePermissionEnum = "Get:AppSettings"
	GetCampaign               RolePermissionEnum = "Get:Campaign"
	GetCampaignAnalytics      RolePermissionEnum = "Get:CampaignAnalytics"
	GetContact                RolePermissionEnum = "Get:Contact"
	GetConversation           RolePermissionEnum = "Get:Conversation"
	GetList                   RolePermissionEnum = "Get:List"
	GetMessageTemplates       RolePermissionEnum = "Get:MessageTemplates"
	GetOrganizationMember     RolePermissionEnum = "Get:OrganizationMember"
	GetOrganizationRole       RolePermissionEnum = "Get:OrganizationRole"
	GetPhoneNumbers           RolePermissionEnum = "Get:PhoneNumbers"
	GetPrimaryAnalytics       RolePermissionEnum = "Get:PrimaryAnalytics"
	GetSecondaryAnalytics     RolePermissionEnum = "Get:SecondaryAnalytics"
	GetTag                    RolePermissionEnum = "Get:Tag"
	RegenerateApiKey          RolePermissionEnum = "Regenerate:ApiKey"
	UnassignConversation      RolePermissionEnum = "Unassign:Conversation"
	UpdateAppSettings         RolePermissionEnum = "Update:AppSettings"
	UpdateCampaign            RolePermissionEnum = "Update:Campaign"
	UpdateContact             RolePermissionEnum = "Update:Contact"
	UpdateConversation        RolePermissionEnum = "Update:Conversation"
	UpdateIntegrationSettings RolePermissionEnum = "Update:IntegrationSettings"
	UpdateList                RolePermissionEnum = "Update:List"
	UpdateOrganization        RolePermissionEnum = "Update:Organization"
	UpdateOrganizationMember  RolePermissionEnum = "Update:OrganizationMember"
	UpdateOrganizationRole    RolePermissionEnum = "Update:OrganizationRole"
	UpdateTag                 RolePermissionEnum = "Update:Tag"
)

// Defines values for TemplateMessageButtonType.
const (
	COPYCODE    TemplateMessageButtonType = "COPY_CODE"
	PHONENUMBER TemplateMessageButtonType = "PHONE_NUMBER"
	QUICKREPLY  TemplateMessageButtonType = "QUICK_REPLY"
	URL         TemplateMessageButtonType = "URL"
)

// Defines values for UserPermissionLevelEnum.
const (
	Member UserPermissionLevelEnum = "Member"
	Owner  UserPermissionLevelEnum = "Owner"
)

// Defines values for GetMessagesParamsStatus.
const (
	GetMessagesParamsStatusFailed GetMessagesParamsStatus = "failed"
	GetMessagesParamsStatusRead   GetMessagesParamsStatus = "read"
	GetMessagesParamsStatusSent   GetMessagesParamsStatus = "sent"
	GetMessagesParamsStatusUnread GetMessagesParamsStatus = "unread"
)

// AcceptOrganizationInviteResponseSchema defines model for AcceptOrganizationInviteResponseSchema.
type AcceptOrganizationInviteResponseSchema struct {
	Token string `json:"token"`
}

// AggregateAnalyticsSchema defines model for AggregateAnalyticsSchema.
type AggregateAnalyticsSchema struct {
	CampaignStats     AggregateCampaignStatsDataPointsSchema     `json:"campaignStats"`
	ContactStats      AggregateContactStatsDataPointsSchema      `json:"contactStats"`
	ConversationStats AggregateConversationStatsDataPointsSchema `json:"conversationStats"`
	MessageStats      AggregateMessageStatsDataPointsSchema      `json:"messageStats"`
}

// AggregateCampaignStatsDataPointsSchema defines model for AggregateCampaignStatsDataPointsSchema.
type AggregateCampaignStatsDataPointsSchema struct {
	CampaignsCancelled int `json:"campaignsCancelled"`
	CampaignsDraft     int `json:"campaignsDraft"`
	CampaignsFinished  int `json:"campaignsFinished"`
	CampaignsPaused    int `json:"campaignsPaused"`
	CampaignsRunning   int `json:"campaignsRunning"`
	CampaignsScheduled int `json:"campaignsScheduled"`
	TotalCampaigns     int `json:"totalCampaigns"`
}

// AggregateContactStatsDataPointsSchema defines model for AggregateContactStatsDataPointsSchema.
type AggregateContactStatsDataPointsSchema struct {
	ContactsActive  int `json:"contactsActive"`
	ContactsBlocked int `json:"contactsBlocked"`
	TotalContacts   int `json:"totalContacts"`
}

// AggregateConversationStatsDataPointsSchema defines model for AggregateConversationStatsDataPointsSchema.
type AggregateConversationStatsDataPointsSchema struct {
	ConversationsActive  int `json:"conversationsActive"`
	ConversationsClosed  int `json:"conversationsClosed"`
	ConversationsPending int `json:"conversationsPending"`
	TotalConversations   int `json:"totalConversations"`
}

// AggregateMessageStatsDataPointsSchema defines model for AggregateMessageStatsDataPointsSchema.
type AggregateMessageStatsDataPointsSchema struct {
	MessagesDelivered   int `json:"messagesDelivered"`
	MessagesFailed      int `json:"messagesFailed"`
	MessagesRead        int `json:"messagesRead"`
	MessagesSent        int `json:"messagesSent"`
	MessagesUndelivered int `json:"messagesUndelivered"`
	MessagesUnread      int `json:"messagesUnread"`
	TotalMessages       int `json:"totalMessages"`
}

// AiChatMessageRoleEnum defines model for AiChatMessageRoleEnum.
type AiChatMessageRoleEnum string

// AiChatMessageSchema defines model for AiChatMessageSchema.
type AiChatMessageSchema struct {
	Content   string                `json:"content"`
	CreatedAt time.Time             `json:"createdAt"`
	Role      AiChatMessageRoleEnum `json:"role"`
	UniqueId  string                `json:"uniqueId"`
}

// AiChatMessageVoteCreateSchema defines model for AiChatMessageVoteCreateSchema.
type AiChatMessageVoteCreateSchema struct {
	MessageId string                 `json:"messageId"`
	Type      *AiChatMessageVoteEnum `json:"type,omitempty"`
}

// AiChatMessageVoteEnum defines model for AiChatMessageVoteEnum.
type AiChatMessageVoteEnum string

// AiChatMessageVoteSchema defines model for AiChatMessageVoteSchema.
type AiChatMessageVoteSchema struct {
	CreatedAt time.Time             `json:"createdAt"`
	MessageId string                `json:"messageId"`
	UniqueId  string                `json:"uniqueId"`
	Vote      AiChatMessageVoteEnum `json:"vote"`
}

// AiChatQuerySchema defines model for AiChatQuerySchema.
type AiChatQuerySchema struct {
	Query string `json:"query"`
}

// AiChatSchema defines model for AiChatSchema.
type AiChatSchema struct {
	CreatedAt   time.Time `json:"createdAt"`
	Description *string   `json:"description,omitempty"`
	Title       string    `json:"title"`
	UniqueId    string    `json:"uniqueId"`
}

// AiChatStatusEnum defines model for AiChatStatusEnum.
type AiChatStatusEnum string

// AiChatVisibilityEnum defines model for AiChatVisibilityEnum.
type AiChatVisibilityEnum string

// AiConfigurationDetailsSchema defines model for AiConfigurationDetailsSchema.
type AiConfigurationDetailsSchema struct {
	IsEnabled *bool       `json:"isEnabled,omitempty"`
	Model     AiModelEnum `json:"model"`
}

// AiModelEnum defines model for AiModelEnum.
type AiModelEnum string

// ApiKeySchema defines model for ApiKeySchema.
type ApiKeySchema struct {
	CreatedAt time.Time `json:"createdAt"`
	Key       string    `json:"key"`
	UniqueId  string    `json:"uniqueId"`
}

// AssignConversationResponseSchema defines model for AssignConversationResponseSchema.
type AssignConversationResponseSchema struct {
	Data bool `json:"data"`
}

// AssignConversationSchema defines model for AssignConversationSchema.
type AssignConversationSchema struct {
	OrganizationMemberId string `json:"organizationMemberId"`
}

// BulkImportResponseSchema defines model for BulkImportResponseSchema.
type BulkImportResponseSchema struct {
	Message string `json:"message"`
}

// BulkImportSchema defines model for BulkImportSchema.
type BulkImportSchema struct {
	Delimiter *string   `json:"delimiter,omitempty"`
	ListIds   *[]string `json:"listIds,omitempty"`
}

// CampaignAnalyticsResponseSchema defines model for CampaignAnalyticsResponseSchema.
type CampaignAnalyticsResponseSchema struct {
	ConversationInitiated int                              `json:"conversationInitiated"`
	LinkClicksData        []LinkClicksGraphDataPointSchema `json:"linkClicksData"`
	MessagesDelivered     int                              `json:"messagesDelivered"`
	MessagesFailed        int                              `json:"messagesFailed"`
	MessagesRead          int                              `json:"messagesRead"`
	MessagesSent          int                              `json:"messagesSent"`
	MessagesUndelivered   int                              `json:"messagesUndelivered"`
	TotalLinkClicks       int                              `json:"totalLinkClicks"`
	TotalMessages         int                              `json:"totalMessages"`
}

// CampaignSchema defines model for CampaignSchema.
type CampaignSchema struct {
	CreatedAt                   time.Time               `json:"createdAt"`
	Description                 *string                 `json:"description,omitempty"`
	IsLinkTrackingEnabled       bool                    `json:"isLinkTrackingEnabled"`
	Lists                       []ContactListSchema     `json:"lists"`
	Name                        string                  `json:"name"`
	PhoneNumberInUse            *string                 `json:"phoneNumberInUse,omitempty"`
	ScheduledAt                 *time.Time              `json:"scheduledAt,omitempty"`
	SentAt                      *time.Time              `json:"sentAt,omitempty"`
	Status                      CampaignStatusEnum      `json:"status"`
	Tags                        []TagSchema             `json:"tags"`
	TemplateComponentParameters *map[string]interface{} `json:"templateComponentParameters,omitempty"`
	TemplateMessageId           *string                 `json:"templateMessageId,omitempty"`
	UniqueId                    string                  `json:"uniqueId"`
}

// CampaignStatusEnum defines model for CampaignStatusEnum.
type CampaignStatusEnum string

// ContactListSchema defines model for ContactListSchema.
type ContactListSchema struct {
	CreatedAt             time.Time   `json:"createdAt"`
	Description           string      `json:"description"`
	Name                  string      `json:"name"`
	NumberOfCampaignsSent int         `json:"numberOfCampaignsSent"`
	NumberOfContacts      int         `json:"numberOfContacts"`
	Tags                  []TagSchema `json:"tags"`
	UniqueId              string      `json:"uniqueId"`
}

// ContactSchema defines model for ContactSchema.
type ContactSchema struct {
	Attributes    map[string]interface{}              `json:"attributes"`
	Conversations *[]ConversationWithoutContactSchema `json:"conversations,omitempty"`
	CreatedAt     time.Time                           `json:"createdAt"`
	Lists         []ContactListSchema                 `json:"lists"`
	Name          string                              `json:"name"`
	Phone         string                              `json:"phone"`
	Status        ContactStatusEnum                   `json:"status"`
	UniqueId      string                              `json:"uniqueId"`
}

// ContactStatusEnum defines model for ContactStatusEnum.
type ContactStatusEnum string

// ContactWithoutConversationSchema defines model for ContactWithoutConversationSchema.
type ContactWithoutConversationSchema struct {
	Attributes map[string]interface{} `json:"attributes"`
	CreatedAt  time.Time              `json:"createdAt"`
	Name       string                 `json:"name"`
	Phone      string                 `json:"phone"`
	Status     ContactStatusEnum      `json:"status"`
	UniqueId   string                 `json:"uniqueId"`
}

// ConversationAnalyticsDataPointSchema defines model for ConversationAnalyticsDataPointSchema.
type ConversationAnalyticsDataPointSchema struct {
	Date                          time.Time `json:"date"`
	Label                         string    `json:"label"`
	NumberOfActiveConversation    int       `json:"numberOfActiveConversation"`
	NumberOfNewConversationOpened int       `json:"numberOfNewConversationOpened"`
}

// ConversationInitiatedByEnum defines model for ConversationInitiatedByEnum.
type ConversationInitiatedByEnum string

// ConversationSchema defines model for ConversationSchema.
type ConversationSchema struct {
	AssignedTo             *OrganizationMemberSchema        `json:"assignedTo,omitempty"`
	CampaignId             *string                          `json:"campaignId,omitempty"`
	Contact                ContactWithoutConversationSchema `json:"contact"`
	ContactId              string                           `json:"contactId"`
	CreatedAt              time.Time                        `json:"createdAt"`
	InitiatedBy            ConversationInitiatedByEnum      `json:"initiatedBy"`
	Messages               []MessageSchema                  `json:"messages"`
	NumberOfUnreadMessages int                              `json:"numberOfUnreadMessages"`
	OrganizationId         string                           `json:"organizationId"`
	Status                 ConversationStatusEnum           `json:"status"`
	Tags                   []TagSchema                      `json:"tags"`
	UniqueId               string                           `json:"uniqueId"`
}

// ConversationStatusEnum defines model for ConversationStatusEnum.
type ConversationStatusEnum string

// ConversationWithoutContactSchema defines model for ConversationWithoutContactSchema.
type ConversationWithoutContactSchema struct {
	CampaignId     *string                     `json:"campaignId,omitempty"`
	ContactId      string                      `json:"contactId"`
	CreatedAt      time.Time                   `json:"createdAt"`
	InitiatedBy    ConversationInitiatedByEnum `json:"initiatedBy"`
	Messages       []MessageSchema             `json:"messages"`
	OrganizationId string                      `json:"organizationId"`
	Status         ConversationStatusEnum      `json:"status"`
	UniqueId       string                      `json:"uniqueId"`
}

// CreateAiChatMessageVoteResponseSchema defines model for CreateAiChatMessageVoteResponseSchema.
type CreateAiChatMessageVoteResponseSchema struct {
	Vote AiChatMessageVoteSchema `json:"vote"`
}

// CreateInviteResponseSchema defines model for CreateInviteResponseSchema.
type CreateInviteResponseSchema struct {
	Invite OrganizationMemberInviteSchema `json:"invite"`
}

// CreateNewCampaignResponseSchema defines model for CreateNewCampaignResponseSchema.
type CreateNewCampaignResponseSchema struct {
	Campaign CampaignSchema `json:"campaign"`
}

// CreateNewContactResponseSchema defines model for CreateNewContactResponseSchema.
type CreateNewContactResponseSchema struct {
	Message string `json:"message"`
}

// CreateNewListResponseSchema defines model for CreateNewListResponseSchema.
type CreateNewListResponseSchema struct {
	List ContactListSchema `json:"list"`
}

// CreateNewOrganizationInviteSchema defines model for CreateNewOrganizationInviteSchema.
type CreateNewOrganizationInviteSchema struct {
	AccessLevel UserPermissionLevelEnum `json:"accessLevel"`
	Email       string                  `json:"email"`
}

// CreateNewOrganizationResponseSchema defines model for CreateNewOrganizationResponseSchema.
type CreateNewOrganizationResponseSchema struct {
	Organization OrganizationSchema `json:"organization"`
}

// CreateNewOrganizationTagResponseSchema defines model for CreateNewOrganizationTagResponseSchema.
type CreateNewOrganizationTagResponseSchema struct {
	Tag TagSchema `json:"tag"`
}

// CreateNewRoleResponseSchema defines model for CreateNewRoleResponseSchema.
type CreateNewRoleResponseSchema struct {
	Role OrganizationRoleSchema `json:"role"`
}

// DeleteContactByIdResponseSchema defines model for DeleteContactByIdResponseSchema.
type DeleteContactByIdResponseSchema struct {
	Data bool `json:"data"`
}

// DeleteConversationByIdResponseSchema defines model for DeleteConversationByIdResponseSchema.
type DeleteConversationByIdResponseSchema struct {
	Data bool `json:"data"`
}

// DeleteOrganizationMemberByIdResponseSchema defines model for DeleteOrganizationMemberByIdResponseSchema.
type DeleteOrganizationMemberByIdResponseSchema struct {
	Data bool `json:"data"`
}

// DeleteRoleByIdResponseSchema defines model for DeleteRoleByIdResponseSchema.
type DeleteRoleByIdResponseSchema struct {
	Data bool `json:"data"`
}

// EmailNotificationConfigurationSchema defines model for EmailNotificationConfigurationSchema.
type EmailNotificationConfigurationSchema struct {
	SmtpHost     string `json:"smtpHost"`
	SmtpPassword string `json:"smtpPassword"`
	SmtpPort     string `json:"smtpPort"`
	SmtpUsername string `json:"smtpUsername"`
}

// FeatureFlags defines model for FeatureFlags.
type FeatureFlags struct {
	SystemFeatureFlags SystemFeatureFlags `json:"SystemFeatureFlags"`
}

// FullAiConfiguration defines model for FullAiConfiguration.
type FullAiConfiguration struct {
	ApiKey    string      `json:"apiKey"`
	IsEnabled bool        `json:"isEnabled"`
	Model     AiModelEnum `json:"model"`
}

// GetAiChatByIdResponseSchema defines model for GetAiChatByIdResponseSchema.
type GetAiChatByIdResponseSchema struct {
	Chat AiChatSchema `json:"chat"`
}

// GetAiChatMessagesResponseSchema defines model for GetAiChatMessagesResponseSchema.
type GetAiChatMessagesResponseSchema struct {
	Messages       []AiChatMessageSchema `json:"messages"`
	PaginationMeta PaginationMeta        `json:"paginationMeta"`
}

// GetAiChatVotesResponseSchema defines model for GetAiChatVotesResponseSchema.
type GetAiChatVotesResponseSchema struct {
	PaginationMeta PaginationMeta            `json:"paginationMeta"`
	Votes          []AiChatMessageVoteSchema `json:"votes"`
}

// GetAiChatsResponseSchema defines model for GetAiChatsResponseSchema.
type GetAiChatsResponseSchema struct {
	Chats          []AiChatSchema `json:"chats"`
	PaginationMeta PaginationMeta `json:"paginationMeta"`
}

// GetAiConfigurationResponseSchema defines model for GetAiConfigurationResponseSchema.
type GetAiConfigurationResponseSchema struct {
	AiConfiguration FullAiConfiguration `json:"aiConfiguration"`
}

// GetAllMessageTemplatesResponseSchema defines model for GetAllMessageTemplatesResponseSchema.
type GetAllMessageTemplatesResponseSchema = []MessageTemplateSchema

// GetAllPhoneNumbersResponseSchema defines model for GetAllPhoneNumbersResponseSchema.
type GetAllPhoneNumbersResponseSchema = []PhoneNumberSchema

// GetApiKeysResponseSchema defines model for GetApiKeysResponseSchema.
type GetApiKeysResponseSchema struct {
	ApiKey ApiKeySchema `json:"apiKey"`
}

// GetCampaignByIdResponseSchema defines model for GetCampaignByIdResponseSchema.
type GetCampaignByIdResponseSchema struct {
	Campaign CampaignSchema `json:"campaign"`
}

// GetCampaignResponseSchema defines model for GetCampaignResponseSchema.
type GetCampaignResponseSchema struct {
	Campaigns      []CampaignSchema `json:"campaigns"`
	PaginationMeta PaginationMeta   `json:"paginationMeta"`
}

// GetContactByIdResponseSchema defines model for GetContactByIdResponseSchema.
type GetContactByIdResponseSchema struct {
	Contact ContactSchema `json:"contact"`
}

// GetContactListByIdSchema defines model for GetContactListByIdSchema.
type GetContactListByIdSchema struct {
	List ContactListSchema `json:"list"`
}

// GetContactListResponseSchema defines model for GetContactListResponseSchema.
type GetContactListResponseSchema struct {
	Lists          []ContactListSchema `json:"lists"`
	PaginationMeta PaginationMeta      `json:"paginationMeta"`
}

// GetContactsResponseSchema defines model for GetContactsResponseSchema.
type GetContactsResponseSchema struct {
	Contacts       []ContactSchema `json:"contacts"`
	PaginationMeta PaginationMeta  `json:"paginationMeta"`
}

// GetConversationByIdResponseSchema defines model for GetConversationByIdResponseSchema.
type GetConversationByIdResponseSchema struct {
	Conversation ConversationSchema `json:"conversation"`
}

// GetConversationMessagesResponseSchema defines model for GetConversationMessagesResponseSchema.
type GetConversationMessagesResponseSchema struct {
	Messages       []MessageSchema `json:"messages"`
	PaginationMeta PaginationMeta  `json:"paginationMeta"`
}

// GetConversationsResponseSchema defines model for GetConversationsResponseSchema.
type GetConversationsResponseSchema struct {
	Conversations  []ConversationSchema `json:"conversations"`
	PaginationMeta PaginationMeta       `json:"paginationMeta"`
}

// GetFeatureFlagsResponseSchema defines model for GetFeatureFlagsResponseSchema.
type GetFeatureFlagsResponseSchema struct {
	FeatureFlags FeatureFlags `json:"featureFlags"`
}

// GetIntegrationResponseSchema defines model for GetIntegrationResponseSchema.
type GetIntegrationResponseSchema struct {
	Integrations   []IntegrationSchema `json:"integrations"`
	PaginationMeta PaginationMeta      `json:"paginationMeta"`
}

// GetMetaDataResponseSchema defines model for GetMetaDataResponseSchema.
type GetMetaDataResponseSchema struct {
	FaviconUrl      *string `json:"faviconUrl,omitempty"`
	MetaDescription *string `json:"metaDescription,omitempty"`
	MetaTitle       *string `json:"metaTitle,omitempty"`
}

// GetOrganizationByIdResponseSchema defines model for GetOrganizationByIdResponseSchema.
type GetOrganizationByIdResponseSchema struct {
	Organization OrganizationSchema `json:"organization"`
}

// GetOrganizationInviteBySlugResponseSchema defines model for GetOrganizationInviteBySlugResponseSchema.
type GetOrganizationInviteBySlugResponseSchema struct {
	Invite OrganizationMemberInviteSchema `json:"invite"`
}

// GetOrganizationMemberByIdResponseSchema defines model for GetOrganizationMemberByIdResponseSchema.
type GetOrganizationMemberByIdResponseSchema struct {
	Member OrganizationMemberSchema `json:"member"`
}

// GetOrganizationMemberInvitesResponseSchema defines model for GetOrganizationMemberInvitesResponseSchema.
type GetOrganizationMemberInvitesResponseSchema struct {
	Invites        []OrganizationMemberInviteSchema `json:"invites"`
	PaginationMeta PaginationMeta                   `json:"paginationMeta"`
}

// GetOrganizationMembersResponseSchema defines model for GetOrganizationMembersResponseSchema.
type GetOrganizationMembersResponseSchema struct {
	Members        []OrganizationMemberSchema `json:"members"`
	PaginationMeta PaginationMeta             `json:"paginationMeta"`
}

// GetOrganizationRolesResponseSchema defines model for GetOrganizationRolesResponseSchema.
type GetOrganizationRolesResponseSchema struct {
	PaginationMeta PaginationMeta           `json:"paginationMeta"`
	Roles          []OrganizationRoleSchema `json:"roles"`
}

// GetOrganizationTagsResponseSchema defines model for GetOrganizationTagsResponseSchema.
type GetOrganizationTagsResponseSchema struct {
	PaginationMeta PaginationMeta `json:"paginationMeta"`
	Tags           []TagSchema    `json:"tags"`
}

// GetOrganizationsResponseSchema defines model for GetOrganizationsResponseSchema.
type GetOrganizationsResponseSchema struct {
	Organizations  []OrganizationSchema `json:"organizations"`
	PaginationMeta PaginationMeta       `json:"paginationMeta"`
}

// GetPhoneNumberByIdResponseSchema defines model for GetPhoneNumberByIdResponseSchema.
type GetPhoneNumberByIdResponseSchema = PhoneNumberSchema

// GetResponseSuggestionsResponse defines model for GetResponseSuggestionsResponse.
type GetResponseSuggestionsResponse struct {
	Suggestions []string `json:"suggestions"`
}

// GetRoleByIdResponseSchema defines model for GetRoleByIdResponseSchema.
type GetRoleByIdResponseSchema struct {
	Role OrganizationRoleSchema `json:"role"`
}

// GetSegmentationRecommendationsResponse defines model for GetSegmentationRecommendationsResponse.
type GetSegmentationRecommendationsResponse struct {
	Recommendations []SegmentationRecommendation `json:"recommendations"`
}

// GetTemplateByIdResponseSchema defines model for GetTemplateByIdResponseSchema.
type GetTemplateByIdResponseSchema struct {
	Template TemplateSchema `json:"template"`
}

// GetUserNotificationsResponseSchema defines model for GetUserNotificationsResponseSchema.
type GetUserNotificationsResponseSchema struct {
	Notifications  []NotificationSchema `json:"notifications"`
	PaginationMeta PaginationMeta       `json:"paginationMeta"`
	UnreadCount    int                  `json:"unreadCount"`
}

// GetUserResponseSchema defines model for GetUserResponseSchema.
type GetUserResponseSchema struct {
	User UserSchema `json:"user"`
}

// IntegrationSchema defines model for IntegrationSchema.
type IntegrationSchema struct {
	CreatedAt   time.Time             `json:"createdAt"`
	Description string                `json:"description"`
	Icon        string                `json:"icon"`
	IsPremium   bool                  `json:"isPremium"`
	Name        string                `json:"name"`
	Slug        string                `json:"slug"`
	Status      IntegrationStatusEnum `json:"status"`
	Type        string                `json:"type"`
	UniqueId    string                `json:"uniqueId"`
}

// IntegrationStatusEnum defines model for IntegrationStatusEnum.
type IntegrationStatusEnum string

// InviteStatusEnum defines model for InviteStatusEnum.
type InviteStatusEnum string

// JoinOrganizationRequestBodySchema defines model for JoinOrganizationRequestBodySchema.
type JoinOrganizationRequestBodySchema struct {
	InviteSlug *string `json:"inviteSlug,omitempty"`
}

// JoinOrganizationResponseBodySchema defines model for JoinOrganizationResponseBodySchema.
type JoinOrganizationResponseBodySchema struct {
	Token string `json:"token"`
}

// LinkClicksGraphDataPointSchema defines model for LinkClicksGraphDataPointSchema.
type LinkClicksGraphDataPointSchema struct {
	Count int       `json:"count"`
	Date  time.Time `json:"date"`
	Label string    `json:"label"`
}

// LoginRequestBodySchema defines model for LoginRequestBodySchema.
type LoginRequestBodySchema struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

// LoginResponseBodySchema defines model for LoginResponseBodySchema.
type LoginResponseBodySchema struct {
	IsOnboardingCompleted bool   `json:"isOnboardingCompleted"`
	Token                 string `json:"token"`
}

// MessageAnalyticGraphDataPointSchema defines model for MessageAnalyticGraphDataPointSchema.
type MessageAnalyticGraphDataPointSchema struct {
	Date    time.Time `json:"date"`
	Label   string    `json:"label"`
	Read    int       `json:"read"`
	Replied int       `json:"replied"`
	Sent    int       `json:"sent"`
}

// MessageDirectionEnum defines model for MessageDirectionEnum.
type MessageDirectionEnum string

// MessageSchema defines model for MessageSchema.
type MessageSchema struct {
	ConversationId string                  `json:"conversationId"`
	CreatedAt      time.Time               `json:"createdAt"`
	Direction      MessageDirectionEnum    `json:"direction"`
	MessageData    *map[string]interface{} `json:"messageData,omitempty"`
	MessageType    MessageTypeEnum         `json:"message_type"`
	Status         MessageStatusEnum       `json:"status"`
	UniqueId       string                  `json:"uniqueId"`
}

// MessageStatusEnum defines model for MessageStatusEnum.
type MessageStatusEnum string

// MessageTemplateCategory defines model for MessageTemplateCategory.
type MessageTemplateCategory string

// MessageTemplateComponentFormat defines model for MessageTemplateComponentFormat.
type MessageTemplateComponentFormat string

// MessageTemplateComponentType defines model for MessageTemplateComponentType.
type MessageTemplateComponentType string

// MessageTemplateSchema defines model for MessageTemplateSchema.
type MessageTemplateSchema struct {
	Category                   MessageTemplateCategory                    `json:"category"`
	Components                 *[]WhatsAppBusinessHSMWhatsAppHSMComponent `json:"components,omitempty"`
	CorrectCategory            *string                                    `json:"correct_category,omitempty"`
	CtaUrlLinkTrackingOptedOut *bool                                      `json:"cta_url_link_tracking_opted_out,omitempty"`
	Id                         string                                     `json:"id"`
	Language                   string                                     `json:"language"`
	LibraryTemplateName        *string                                    `json:"library_template_name,omitempty"`
	MessageSendTtlSeconds      *int                                       `json:"message_send_ttl_seconds,omitempty"`
	Name                       string                                     `json:"name"`
	PreviousCategory           *string                                    `json:"previous_category,omitempty"`
	QualityScore               *TemplateMessageQualityScore               `json:"quality_score,omitempty"`
	RejectedReason             *string                                    `json:"rejected_reason,omitempty"`
	Status                     MessageTemplateStatus                      `json:"status"`
}

// MessageTemplateStatus defines model for MessageTemplateStatus.
type MessageTemplateStatus string

// MessageTypeDistributionGraphDataPointSchema defines model for MessageTypeDistributionGraphDataPointSchema.
type MessageTypeDistributionGraphDataPointSchema struct {
	Received int    `json:"received"`
	Sent     int    `json:"sent"`
	Type     string `json:"type"`
}

// MessageTypeEnum defines model for MessageTypeEnum.
type MessageTypeEnum string

// NewCampaignSchema defines model for NewCampaignSchema.
type NewCampaignSchema struct {
	Description           *string    `json:"description,omitempty"`
	IsLinkTrackingEnabled bool       `json:"isLinkTrackingEnabled"`
	ListIds               []string   `json:"listIds"`
	Name                  string     `json:"name"`
	PhoneNumberToUse      string     `json:"phoneNumberToUse"`
	ScheduledAt           *time.Time `json:"scheduledAt,omitempty"`
	Tags                  []string   `json:"tags"`
	TemplateMessageId     string     `json:"templateMessageId"`
}

// NewContactListSchema defines model for NewContactListSchema.
type NewContactListSchema struct {
	ContactIds  *[]string   `json:"contactIds,omitempty"`
	Description *string     `json:"description,omitempty"`
	Name        string      `json:"name"`
	Tags        []TagSchema `json:"tags"`
}

// NewContactSchema defines model for NewContactSchema.
type NewContactSchema struct {
	Attributes map[string]interface{} `json:"attributes"`
	ListsIds   []string               `json:"listsIds"`
	Name       string                 `json:"name"`
	Phone      string                 `json:"phone"`
	Status     ContactStatusEnum      `json:"status"`
}

// NewMessageSchema defines model for NewMessageSchema.
type NewMessageSchema struct {
	CreatedAt   *time.Time              `json:"createdAt,omitempty"`
	MessageData *map[string]interface{} `json:"messageData,omitempty"`
	MessageType *MessageTypeEnum        `json:"messageType,omitempty"`
}

// NewOrganizationRoleSchema defines model for NewOrganizationRoleSchema.
type NewOrganizationRoleSchema struct {
	Description *string              `json:"description,omitempty"`
	Name        string               `json:"name"`
	Permissions []RolePermissionEnum `json:"permissions"`
}

// NewOrganizationSchema defines model for NewOrganizationSchema.
type NewOrganizationSchema struct {
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
}

// NewOrganizationTagSchema defines model for NewOrganizationTagSchema.
type NewOrganizationTagSchema struct {
	Label string `json:"label"`
}

// NotificationSchema defines model for NotificationSchema.
type NotificationSchema struct {
	CreatedAt   time.Time `json:"createdAt"`
	CtaUrl      *string   `json:"ctaUrl,omitempty"`
	Description string    `json:"description"`
	Read        bool      `json:"read"`
	Title       string    `json:"title"`
	Type        string    `json:"type"`
	UniqueId    string    `json:"uniqueId"`
}

// OrderEnum defines model for OrderEnum.
type OrderEnum string

// OrganizationMemberInviteSchema defines model for OrganizationMemberInviteSchema.
type OrganizationMemberInviteSchema struct {
	AccessLevel      UserPermissionLevelEnum `json:"accessLevel"`
	CreatedAt        time.Time               `json:"createdAt"`
	Email            string                  `json:"email"`
	OrganizationName string                  `json:"organizationName"`
	Status           InviteStatusEnum        `json:"status"`
	UniqueId         string                  `json:"uniqueId"`
}

// OrganizationMemberSchema defines model for OrganizationMemberSchema.
type OrganizationMemberSchema struct {
	AccessLevel UserPermissionLevelEnum  `json:"accessLevel"`
	CreatedAt   time.Time                `json:"createdAt"`
	Email       string                   `json:"email"`
	Name        string                   `json:"name"`
	Roles       []OrganizationRoleSchema `json:"roles"`
	UniqueId    string                   `json:"uniqueId"`
}

// OrganizationRoleSchema defines model for OrganizationRoleSchema.
type OrganizationRoleSchema struct {
	Description *string              `json:"description,omitempty"`
	Name        string               `json:"name"`
	Permissions []RolePermissionEnum `json:"permissions"`
	UniqueId    string               `json:"uniqueId"`
}

// OrganizationSchema defines model for OrganizationSchema.
type OrganizationSchema struct {
	AiConfiguration                *AiConfigurationDetailsSchema         `json:"aiConfiguration,omitempty"`
	BusinessAccountId              *string                               `json:"businessAccountId,omitempty"`
	CreatedAt                      time.Time                             `json:"createdAt"`
	Description                    *string                               `json:"description,omitempty"`
	EmailNotificationConfiguration *EmailNotificationConfigurationSchema `json:"emailNotificationConfiguration,omitempty"`
	FaviconUrl                     *string                               `json:"faviconUrl,omitempty"`
	LogoUrl                        *string                               `json:"logoUrl,omitempty"`
	Name                           string                                `json:"name"`
	SlackNotificationConfiguration *SlackNotificationConfigurationSchema `json:"slackNotificationConfiguration,omitempty"`
	UniqueId                       string                                `json:"uniqueId"`
	WebsiteUrl                     *string                               `json:"websiteUrl,omitempty"`
	WhatsappBusinessAccountDetails *WhatsAppBusinessAccountDetailsSchema `json:"whatsappBusinessAccountDetails,omitempty"`
}

// PaginationMeta defines model for PaginationMeta.
type PaginationMeta struct {
	Page    int64 `json:"page"`
	PerPage int64 `json:"per_page"`
	Total   int   `json:"total"`
}

// PhoneNumberSchema defines model for PhoneNumberSchema.
type PhoneNumberSchema struct {
	CodeVerificationStatus struct {
		Status *string `json:"status,omitempty"`
	} `json:"code_verification_status"`
	DisplayPhoneNumber string `json:"display_phone_number"`
	Id                 string `json:"id"`
	PlatformType       string `json:"platform_type"`
	QualityRating      string `json:"quality_rating"`
	VerifiedName       string `json:"verified_name"`
}

// PrimaryAnalyticsResponseSchema defines model for PrimaryAnalyticsResponseSchema.
type PrimaryAnalyticsResponseSchema struct {
	AggregateAnalytics AggregateAnalyticsSchema              `json:"aggregateAnalytics"`
	LinkClickAnalytics []LinkClicksGraphDataPointSchema      `json:"linkClickAnalytics"`
	MessageAnalytics   []MessageAnalyticGraphDataPointSchema `json:"messageAnalytics"`
}

// RegenerateApiKeyResponseSchema defines model for RegenerateApiKeyResponseSchema.
type RegenerateApiKeyResponseSchema struct {
	ApiKey *ApiKeySchema `json:"apiKey,omitempty"`
}

// RegisterRequestBodySchema defines model for RegisterRequestBodySchema.
type RegisterRequestBodySchema struct {
	Email                  string  `json:"email"`
	Name                   string  `json:"name"`
	OrganizationInviteSlug *string `json:"organizationInviteSlug,omitempty"`
	Password               string  `json:"password"`
	Username               string  `json:"username"`
}

// RegisterRequestResponseBodySchema defines model for RegisterRequestResponseBodySchema.
type RegisterRequestResponseBodySchema struct {
	IsOtpSent bool `json:"isOtpSent"`
}

// RolePermissionEnum defines model for RolePermissionEnum.
type RolePermissionEnum string

// RoleUpdateSchema defines model for RoleUpdateSchema.
type RoleUpdateSchema struct {
	Description *string              `json:"description,omitempty"`
	Name        string               `json:"name"`
	Permissions []RolePermissionEnum `json:"permissions"`
}

// SecondaryAnalyticsDashboardResponseSchema defines model for SecondaryAnalyticsDashboardResponseSchema.
type SecondaryAnalyticsDashboardResponseSchema struct {
	ConversationsAnalytics                  []ConversationAnalyticsDataPointSchema        `json:"conversationsAnalytics"`
	MessageTypeTrafficDistributionAnalytics []MessageTypeDistributionGraphDataPointSchema `json:"messageTypeTrafficDistributionAnalytics"`
}

// SegmentationRecommendation defines model for SegmentationRecommendation.
type SegmentationRecommendation struct {
	Lists []ContactListSchema `json:"lists"`
	Tags  []TagSchema         `json:"tags"`
}

// SendMessageInConversationResponseSchema defines model for SendMessageInConversationResponseSchema.
type SendMessageInConversationResponseSchema struct {
	Message MessageSchema `json:"message"`
}

// SlackNotificationConfigurationSchema defines model for SlackNotificationConfigurationSchema.
type SlackNotificationConfigurationSchema struct {
	SlackChannel    string `json:"slackChannel"`
	SlackWebhookUrl string `json:"slackWebhookUrl"`
}

// SwitchOrganizationResponseSchema defines model for SwitchOrganizationResponseSchema.
type SwitchOrganizationResponseSchema struct {
	Token string `json:"token"`
}

// SystemFeatureFlags defines model for SystemFeatureFlags.
type SystemFeatureFlags struct {
	IsAiIntegrationEnabled                bool `json:"isAiIntegrationEnabled"`
	IsApiAccessEnabled                    bool `json:"isApiAccessEnabled"`
	IsCloudEdition                        bool `json:"isCloudEdition"`
	IsEnterpriseEdition                   bool `json:"isEnterpriseEdition"`
	IsMultiOrganizationEnabled            bool `json:"isMultiOrganizationEnabled"`
	IsPluginIntegrationMarketplaceEnabled bool `json:"isPluginIntegrationMarketplaceEnabled"`
	IsRoleBasedAccessControlEnabled       bool `json:"isRoleBasedAccessControlEnabled"`
}

// TagSchema defines model for TagSchema.
type TagSchema struct {
	Label    string `json:"label"`
	UniqueId string `json:"uniqueId"`
}

// TemplateMessageButtonType defines model for TemplateMessageButtonType.
type TemplateMessageButtonType string

// TemplateMessageComponentButton defines model for TemplateMessageComponentButton.
type TemplateMessageComponentButton struct {
	Example     *[]string                  `json:"example,omitempty"`
	PhoneNumber *string                    `json:"phone_number,omitempty"`
	Text        *string                    `json:"text,omitempty"`
	Type        *TemplateMessageButtonType `json:"type,omitempty"`
	Url         *string                    `json:"url,omitempty"`
}

// TemplateMessageComponentExample defines model for TemplateMessageComponentExample.
type TemplateMessageComponentExample struct {
	BodyText     *[][]string `json:"body_text,omitempty"`
	HeaderHandle *[]string   `json:"header_handle,omitempty"`
	HeaderText   *[]string   `json:"header_text,omitempty"`
}

// TemplateMessageQualityScore defines model for TemplateMessageQualityScore.
type TemplateMessageQualityScore struct {
	Date    *int      `json:"date,omitempty"`
	Reasons *[]string `json:"reasons,omitempty"`
	Score   *int      `json:"score,omitempty"`
}

// TemplateSchema defines model for TemplateSchema.
type TemplateSchema struct {
	BodyText  string                  `json:"bodyText"`
	Content   string                  `json:"content"`
	CreatedAt time.Time               `json:"createdAt"`
	Footer    *map[string]interface{} `json:"footer,omitempty"`
	Header    struct {
		Content    *string `json:"content,omitempty"`
		HeaderType *string `json:"headerType,omitempty"`
	} `json:"header"`
	TemplateId string `json:"templateId"`
}

// TransferOrganizationOwnershipResponseSchema defines model for TransferOrganizationOwnershipResponseSchema.
type TransferOrganizationOwnershipResponseSchema struct {
	IsTransferred bool `json:"isTransferred"`
}

// TransferOrganizationOwnershipSchema defines model for TransferOrganizationOwnershipSchema.
type TransferOrganizationOwnershipSchema struct {
	NewOwnerId string `json:"newOwnerId"`
}

// UnassignConversationResponseSchema defines model for UnassignConversationResponseSchema.
type UnassignConversationResponseSchema struct {
	Data bool `json:"data"`
}

// UnassignConversationSchema defines model for UnassignConversationSchema.
type UnassignConversationSchema struct {
	UserId string `json:"userId"`
}

// UpdateAIConfigurationDetailsSchema defines model for UpdateAIConfigurationDetailsSchema.
type UpdateAIConfigurationDetailsSchema struct {
	ApiKey    string      `json:"apiKey"`
	IsEnabled *bool       `json:"isEnabled,omitempty"`
	Model     AiModelEnum `json:"model"`
}

// UpdateCampaignByIdResponseSchema defines model for UpdateCampaignByIdResponseSchema.
type UpdateCampaignByIdResponseSchema struct {
	IsUpdated bool `json:"isUpdated"`
}

// UpdateCampaignSchema defines model for UpdateCampaignSchema.
type UpdateCampaignSchema struct {
	Description                 *string                 `json:"description,omitempty"`
	EnableLinkTracking          bool                    `json:"enableLinkTracking"`
	ListIds                     []string                `json:"listIds"`
	Name                        string                  `json:"name"`
	PhoneNumber                 *string                 `json:"phoneNumber,omitempty"`
	ScheduledAt                 *time.Time              `json:"scheduledAt,omitempty"`
	Status                      *CampaignStatusEnum     `json:"status,omitempty"`
	Tags                        []string                `json:"tags"`
	TemplateComponentParameters *map[string]interface{} `json:"templateComponentParameters,omitempty"`
	TemplateMessageId           *string                 `json:"templateMessageId,omitempty"`
}

// UpdateContactByIdResponseSchema defines model for UpdateContactByIdResponseSchema.
type UpdateContactByIdResponseSchema struct {
	Contact ContactSchema `json:"contact"`
}

// UpdateContactListSchema defines model for UpdateContactListSchema.
type UpdateContactListSchema struct {
	Description *string     `json:"description,omitempty"`
	Name        string      `json:"name"`
	Tags        []TagSchema `json:"tags"`
}

// UpdateContactSchema defines model for UpdateContactSchema.
type UpdateContactSchema struct {
	Attributes map[string]interface{} `json:"attributes"`
	Lists      []string               `json:"lists"`
	Name       string                 `json:"name"`
	Phone      string                 `json:"phone"`
	Status     ContactStatusEnum      `json:"status"`
}

// UpdateConversationByIdResponseSchema defines model for UpdateConversationByIdResponseSchema.
type UpdateConversationByIdResponseSchema struct {
	Conversation ConversationSchema `json:"conversation"`
}

// UpdateConversationSchema defines model for UpdateConversationSchema.
type UpdateConversationSchema struct {
	Status ConversationStatusEnum `json:"status"`
}

// UpdateListByIdResponseSchema defines model for UpdateListByIdResponseSchema.
type UpdateListByIdResponseSchema struct {
	List ContactListSchema `json:"list"`
}

// UpdateOrganizationByIdResponseSchema defines model for UpdateOrganizationByIdResponseSchema.
type UpdateOrganizationByIdResponseSchema struct {
	IsUpdated bool `json:"isUpdated"`
}

// UpdateOrganizationMemberByIdResponseSchema defines model for UpdateOrganizationMemberByIdResponseSchema.
type UpdateOrganizationMemberByIdResponseSchema struct {
	Member OrganizationMemberSchema `json:"member"`
}

// UpdateOrganizationMemberRoleByIdResponseSchema defines model for UpdateOrganizationMemberRoleByIdResponseSchema.
type UpdateOrganizationMemberRoleByIdResponseSchema struct {
	IsRoleUpdated bool `json:"isRoleUpdated"`
}

// UpdateOrganizationMemberRoleSchema defines model for UpdateOrganizationMemberRoleSchema.
type UpdateOrganizationMemberRoleSchema struct {
	UpdatedRoleIds []string `json:"updatedRoleIds"`
}

// UpdateOrganizationMemberSchema defines model for UpdateOrganizationMemberSchema.
type UpdateOrganizationMemberSchema struct {
	AccessLevel *UserPermissionLevelEnum `json:"accessLevel,omitempty"`
}

// UpdateOrganizationSchema defines model for UpdateOrganizationSchema.
type UpdateOrganizationSchema struct {
	AiConfiguration                *UpdateAIConfigurationDetailsSchema   `json:"aiConfiguration,omitempty"`
	Description                    *string                               `json:"description,omitempty"`
	EmailNotificationConfiguration *EmailNotificationConfigurationSchema `json:"emailNotificationConfiguration,omitempty"`
	Name                           string                                `json:"name"`
	SlackNotificationConfiguration *SlackNotificationConfigurationSchema `json:"slackNotificationConfiguration,omitempty"`
}

// UpdateRoleByIdResponseSchema defines model for UpdateRoleByIdResponseSchema.
type UpdateRoleByIdResponseSchema struct {
	Role OrganizationRoleSchema `json:"role"`
}

// UpdateUserResponseSchema defines model for UpdateUserResponseSchema.
type UpdateUserResponseSchema struct {
	IsUpdated bool `json:"isUpdated"`
}

// UpdateUserSchema defines model for UpdateUserSchema.
type UpdateUserSchema struct {
	Name           string  `json:"name"`
	ProfilePicture *string `json:"profilePicture,omitempty"`
}

// UpdateWhatsAppBusinessAccountDetailsSchema defines model for UpdateWhatsAppBusinessAccountDetailsSchema.
type UpdateWhatsAppBusinessAccountDetailsSchema struct {
	AccessToken       string `json:"accessToken"`
	BusinessAccountId string `json:"businessAccountId"`
}

// UserPermissionLevelEnum defines model for UserPermissionLevelEnum.
type UserPermissionLevelEnum string

// UserSchema defines model for UserSchema.
type UserSchema struct {
	CreatedAt                      time.Time                `json:"createdAt"`
	CurrentOrganizationAccessLevel *UserPermissionLevelEnum `json:"currentOrganizationAccessLevel,omitempty"`
	Email                          string                   `json:"email"`
	FeatureFlags                   *FeatureFlags            `json:"featureFlags,omitempty"`
	IsOwner                        bool                     `json:"isOwner"`
	Name                           string                   `json:"name"`
	Organization                   *OrganizationSchema      `json:"organization,omitempty"`
	ProfilePicture                 *string                  `json:"profilePicture,omitempty"`
	UniqueId                       string                   `json:"uniqueId"`
	Username                       string                   `json:"username"`
}

// VerifyOtpRequestBodySchema defines model for VerifyOtpRequestBodySchema.
type VerifyOtpRequestBodySchema struct {
	Email                  string  `json:"email"`
	Name                   string  `json:"name"`
	OrganizationInviteSlug *string `json:"organizationInviteSlug,omitempty"`
	Otp                    string  `json:"otp"`
	Password               string  `json:"password"`
	Username               string  `json:"username"`
}

// VerifyOtpResponseBodySchema defines model for VerifyOtpResponseBodySchema.
type VerifyOtpResponseBodySchema struct {
	Token string `json:"token"`
}

// WhatsAppBusinessAccountDetailsSchema defines model for WhatsAppBusinessAccountDetailsSchema.
type WhatsAppBusinessAccountDetailsSchema struct {
	AccessToken       string `json:"accessToken"`
	BusinessAccountId string `json:"businessAccountId"`
	WebhookSecret     string `json:"webhookSecret"`
}

// WhatsAppBusinessHSMWhatsAppHSMComponent defines model for WhatsAppBusinessHSMWhatsAppHSMComponent.
type WhatsAppBusinessHSMWhatsAppHSMComponent struct {
	AddSecurityRecommendation *bool                             `json:"add_security_recommendation,omitempty"`
	Buttons                   *[]TemplateMessageComponentButton `json:"buttons,omitempty"`
	Cards                     *[]map[string]interface{}         `json:"cards,omitempty"`
	CodeExpirationMinutes     *int                              `json:"code_expiration_minutes,omitempty"`
	Example                   *TemplateMessageComponentExample  `json:"example,omitempty"`
	Format                    *MessageTemplateComponentFormat   `json:"format,omitempty"`
	LimitedTimeOffer          *map[string]interface{}           `json:"limited_time_offer,omitempty"`
	Text                      *string                           `json:"text,omitempty"`
	Type                      *MessageTemplateComponentType     `json:"type,omitempty"`
}

// GetAiChatMessagesParams defines parameters for GetAiChatMessages.
type GetAiChatMessagesParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`
}

// GetAiChatMessageVotesParams defines parameters for GetAiChatMessageVotes.
type GetAiChatMessageVotesParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`
}

// GetAiChatsParams defines parameters for GetAiChats.
type GetAiChatsParams struct {
	// Page number of records to skip
	Page *int64 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int64 `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Order order by asc or desc
	Order *OrderEnum `form:"order,omitempty" json:"order,omitempty"`

	// Status status of the ai chat
	Status *AiChatStatusEnum `form:"status,omitempty" json:"status,omitempty"`

	// Visibility visibility of the ai chat
	Visibility *AiChatVisibilityEnum `form:"visibility,omitempty" json:"visibility,omitempty"`
}

// GetConversationResponseSuggestionsParams defines parameters for GetConversationResponseSuggestions.
type GetConversationResponseSuggestionsParams struct {
	// ConversationId number of records to skip
	ConversationId string `form:"conversationId" json:"conversationId"`
}

// GetAiChatSegmentRecommendationsParams defines parameters for GetAiChatSegmentRecommendations.
type GetAiChatSegmentRecommendationsParams struct {
	// ConversationId number of records to skip
	ConversationId *int64 `form:"conversationId,omitempty" json:"conversationId,omitempty"`

	// ContactId max number of records to return per page
	ContactId *int64 `form:"contactId,omitempty" json:"contactId,omitempty"`
}

// GetCampaignsAnalyticsParams defines parameters for GetCampaignsAnalytics.
type GetCampaignsAnalyticsParams struct {
	// From starting range of time span to get analytics for
	From *time.Time `form:"from,omitempty" json:"from,omitempty"`

	// To ending range of time span to get analytics for
	To *time.Time `form:"to,omitempty" json:"to,omitempty"`
}

// GetPrimaryAnalyticsParams defines parameters for GetPrimaryAnalytics.
type GetPrimaryAnalyticsParams struct {
	// From starting range of time span to get analytics for
	From time.Time `form:"from" json:"from"`

	// To ending range of time span to get analytics for
	To time.Time `form:"to" json:"to"`
}

// GetSecondaryAnalyticsParams defines parameters for GetSecondaryAnalytics.
type GetSecondaryAnalyticsParams struct {
	// From starting range of time span to get analytics for
	From *time.Time `form:"from,omitempty" json:"from,omitempty"`

	// To ending range of time span to get analytics for
	To *time.Time `form:"to,omitempty" json:"to,omitempty"`
}

// SwitchOrganizationJSONBody defines parameters for SwitchOrganization.
type SwitchOrganizationJSONBody struct {
	OrganizationId *string `json:"organizationId,omitempty"`
}

// GetCampaignsParams defines parameters for GetCampaigns.
type GetCampaignsParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// Order order by asc or desc
	Order *OrderEnum `form:"order,omitempty" json:"order,omitempty"`

	// Status sort by a field
	Status *CampaignStatusEnum `form:"status,omitempty" json:"status,omitempty"`
}

// DeleteContactsByListParams defines parameters for DeleteContactsByList.
type DeleteContactsByListParams struct {
	// Id contact id/s to be deleted
	Id string `form:"id" json:"id"`
}

// GetContactsParams defines parameters for GetContacts.
type GetContactsParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// ListId query subscribers with a list id.
	ListId *string `form:"list_id,omitempty" json:"list_id,omitempty"`

	// Order order by asc or desc
	Order *OrderEnum `form:"order,omitempty" json:"order,omitempty"`

	// Status sort by a field
	Status *string `form:"status,omitempty" json:"status,omitempty"`
}

// CreateContactsJSONBody defines parameters for CreateContacts.
type CreateContactsJSONBody = []NewContactSchema

// BulkImportContactsMultipartBody defines parameters for BulkImportContacts.
type BulkImportContactsMultipartBody struct {
	// File The CSV file to be imported
	File *openapi_types.File `json:"file,omitempty"`
}

// GetConversationMessagesParams defines parameters for GetConversationMessages.
type GetConversationMessagesParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// Order order by asc or desc
	Order *OrderEnum `form:"order,omitempty" json:"order,omitempty"`
}

// GetConversationsParams defines parameters for GetConversations.
type GetConversationsParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// Order order by asc or desc
	Order *OrderEnum `form:"order,omitempty" json:"order,omitempty"`

	// Status sort by a field
	Status *ConversationStatusEnum `form:"status,omitempty" json:"status,omitempty"`

	// ContactId query conversations with a contact id.
	ContactId *string `form:"contact_id,omitempty" json:"contact_id,omitempty"`

	// CampaignId query conversations with a campaign id.
	CampaignId *string `form:"campaign_id,omitempty" json:"campaign_id,omitempty"`

	// ListId query conversations with a list id.
	ListId *string `form:"list_id,omitempty" json:"list_id,omitempty"`

	// MessageId query conversations with a message id.
	MessageId *string `form:"message_id,omitempty" json:"message_id,omitempty"`
}

// GetIntegrationsParams defines parameters for GetIntegrations.
type GetIntegrationsParams struct {
	// Page number of records to skip
	Page *int64 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int64 `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Order order by asc or desc
	Order *OrderEnum `form:"order,omitempty" json:"order,omitempty"`

	// Status status of the integration
	Status *IntegrationStatusEnum `form:"status,omitempty" json:"status,omitempty"`
}

// GetContactListsParams defines parameters for GetContactLists.
type GetContactListsParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// Order order by asc or desc
	Order *OrderEnum `form:"order,omitempty" json:"order,omitempty"`
}

// GetMessagesParams defines parameters for GetMessages.
type GetMessagesParams struct {
	// Page number of records to skip
	Page *int64 `form:"page,omitempty" json:"page,omitempty"`

	// PerPage max number of records to return per page
	PerPage *int64 `form:"per_page,omitempty" json:"per_page,omitempty"`

	// Order order by asc or desc
	Order *OrderEnum `form:"order,omitempty" json:"order,omitempty"`

	// Status status of the message
	Status *GetMessagesParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// Direction direction of the message
	Direction *MessageDirectionEnum `form:"direction,omitempty" json:"direction,omitempty"`

	// ContactId query messages with a contact id.
	ContactId *string `form:"contact_id,omitempty" json:"contact_id,omitempty"`

	// CampaignId query messages with a campaign id.
	CampaignId *string `form:"campaign_id,omitempty" json:"campaign_id,omitempty"`

	// ListId query messages with a list id.
	ListId *string `form:"list_id,omitempty" json:"list_id,omitempty"`

	// ConversationId query messages with a conversation id.
	ConversationId *string `form:"conversation_id,omitempty" json:"conversation_id,omitempty"`
}

// GetMessagesParamsStatus defines parameters for GetMessages.
type GetMessagesParamsStatus string

// GetUserOrganizationsParams defines parameters for GetUserOrganizations.
type GetUserOrganizationsParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// SortBy sorting order
	SortBy *OrderEnum `form:"sortBy,omitempty" json:"sortBy,omitempty"`
}

// GetOrganizationInvitesParams defines parameters for GetOrganizationInvites.
type GetOrganizationInvitesParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// SortBy sorting order
	SortBy *OrderEnum `form:"sortBy,omitempty" json:"sortBy,omitempty"`
}

// GetOrganizationMembersParams defines parameters for GetOrganizationMembers.
type GetOrganizationMembersParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// SortBy sorting order
	SortBy *OrderEnum `form:"sortBy,omitempty" json:"sortBy,omitempty"`
}

// GetOrganizationTagsParams defines parameters for GetOrganizationTags.
type GetOrganizationTagsParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// SortBy sorting order
	SortBy *OrderEnum `form:"sortBy,omitempty" json:"sortBy,omitempty"`
}

// GetOrganizationRolesParams defines parameters for GetOrganizationRoles.
type GetOrganizationRolesParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// SortBy sorting order
	SortBy *OrderEnum `form:"sortBy,omitempty" json:"sortBy,omitempty"`
}

// GetUserNotificationsParams defines parameters for GetUserNotifications.
type GetUserNotificationsParams struct {
	// Page number of records to skip
	Page int64 `form:"page" json:"page"`

	// PerPage max number of records to return per page
	PerPage int64 `form:"per_page" json:"per_page"`

	// SortBy sorting order
	SortBy *OrderEnum `form:"sortBy,omitempty" json:"sortBy,omitempty"`
}

// SendMessageInAiChatJSONRequestBody defines body for SendMessageInAiChat for application/json ContentType.
type SendMessageInAiChatJSONRequestBody = AiChatQuerySchema

// VoteOnAiChatMessageJSONRequestBody defines body for VoteOnAiChatMessage for application/json ContentType.
type VoteOnAiChatMessageJSONRequestBody = AiChatMessageVoteCreateSchema

// JoinOrganizationJSONRequestBody defines body for JoinOrganization for application/json ContentType.
type JoinOrganizationJSONRequestBody = JoinOrganizationRequestBodySchema

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = LoginRequestBodySchema

// RegisterJSONRequestBody defines body for Register for application/json ContentType.
type RegisterJSONRequestBody = RegisterRequestBodySchema

// SwitchOrganizationJSONRequestBody defines body for SwitchOrganization for application/json ContentType.
type SwitchOrganizationJSONRequestBody SwitchOrganizationJSONBody

// VerifyOtpJSONRequestBody defines body for VerifyOtp for application/json ContentType.
type VerifyOtpJSONRequestBody = VerifyOtpRequestBodySchema

// CreateCampaignJSONRequestBody defines body for CreateCampaign for application/json ContentType.
type CreateCampaignJSONRequestBody = NewCampaignSchema

// UpdateCampaignByIdJSONRequestBody defines body for UpdateCampaignById for application/json ContentType.
type UpdateCampaignByIdJSONRequestBody = UpdateCampaignSchema

// CreateContactsJSONRequestBody defines body for CreateContacts for application/json ContentType.
type CreateContactsJSONRequestBody = CreateContactsJSONBody

// BulkImportContactsJSONRequestBody defines body for BulkImportContacts for application/json ContentType.
type BulkImportContactsJSONRequestBody = BulkImportSchema

// BulkImportContactsMultipartRequestBody defines body for BulkImportContacts for multipart/form-data ContentType.
type BulkImportContactsMultipartRequestBody BulkImportContactsMultipartBody

// UpdateContactByIdJSONRequestBody defines body for UpdateContactById for application/json ContentType.
type UpdateContactByIdJSONRequestBody = UpdateContactSchema

// UpdateConversationByIdJSONRequestBody defines body for UpdateConversationById for application/json ContentType.
type UpdateConversationByIdJSONRequestBody = UpdateConversationSchema

// AssignConversationJSONRequestBody defines body for AssignConversation for application/json ContentType.
type AssignConversationJSONRequestBody = AssignConversationSchema

// SendMessageInConversationJSONRequestBody defines body for SendMessageInConversation for application/json ContentType.
type SendMessageInConversationJSONRequestBody = NewMessageSchema

// UnassignConversationJSONRequestBody defines body for UnassignConversation for application/json ContentType.
type UnassignConversationJSONRequestBody = UnassignConversationSchema

// CreateListJSONRequestBody defines body for CreateList for application/json ContentType.
type CreateListJSONRequestBody = NewContactListSchema

// UpdateListByIdJSONRequestBody defines body for UpdateListById for application/json ContentType.
type UpdateListByIdJSONRequestBody = UpdateContactListSchema

// CreateOrganizationJSONRequestBody defines body for CreateOrganization for application/json ContentType.
type CreateOrganizationJSONRequestBody = NewOrganizationSchema

// CreateOrganizationInviteJSONRequestBody defines body for CreateOrganizationInvite for application/json ContentType.
type CreateOrganizationInviteJSONRequestBody = CreateNewOrganizationInviteSchema

// UpdateOrganizationMemberByIdJSONRequestBody defines body for UpdateOrganizationMemberById for application/json ContentType.
type UpdateOrganizationMemberByIdJSONRequestBody = UpdateOrganizationMemberSchema

// UpdateOrganizationMemberRoleByIdJSONRequestBody defines body for UpdateOrganizationMemberRoleById for application/json ContentType.
type UpdateOrganizationMemberRoleByIdJSONRequestBody = UpdateOrganizationMemberRoleSchema

// CreateOrganizationTagJSONRequestBody defines body for CreateOrganizationTag for application/json ContentType.
type CreateOrganizationTagJSONRequestBody = NewOrganizationTagSchema

// UpdateWhatsappBusinessAccountDetailsJSONRequestBody defines body for UpdateWhatsappBusinessAccountDetails for application/json ContentType.
type UpdateWhatsappBusinessAccountDetailsJSONRequestBody = UpdateWhatsAppBusinessAccountDetailsSchema

// UpdateOrganizationJSONRequestBody defines body for UpdateOrganization for application/json ContentType.
type UpdateOrganizationJSONRequestBody = UpdateOrganizationSchema

// TransferOrganizationOwnershipJSONRequestBody defines body for TransferOrganizationOwnership for application/json ContentType.
type TransferOrganizationOwnershipJSONRequestBody = TransferOrganizationOwnershipSchema

// CreateOrganizationRoleJSONRequestBody defines body for CreateOrganizationRole for application/json ContentType.
type CreateOrganizationRoleJSONRequestBody = NewOrganizationRoleSchema

// UpdateOrganizationRoleByIdJSONRequestBody defines body for UpdateOrganizationRoleById for application/json ContentType.
type UpdateOrganizationRoleByIdJSONRequestBody = RoleUpdateSchema

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = UpdateUserSchema
